#!/bin/sh

# exit if command fails
set -e
# sane behaviour for cd
unset CDPATH
# set IFS to SP HT LF.
IFS=' 	
'

usage () {
  cat << EOF
usage: $(basename "$0") [OPTIONS]... [COLS]

Print the ASCII table in COLS columns.
Default number of COLS is 4.

By default, only hexadecimal indices are displayed.

options:
  -d    display deicmal indices
  -x    display hexadecimal indices
  -o    display octal indices
  -h    display this help and exit
EOF
}

while getopts "odxh" opt; do
  case "$opt" in
    o) oct=y ;;
    d) dec=y ;;
    x) hex=y ;;
    h) usage ; exit 0 ;;
    \?) usage >&2 ; exit 1 ;;
  esac
done

shift $((OPTIND-1))

if [ "$(echo "$1" |tr -d "[:digit:]")" ] ; then
  printf "Invalid number of columns '%s'\n" "$1" >&2
  exit 2
fi

if [ "$oct" != "y" -a "$dec" != "y" -a "$hex" != "y" ]; then
  hex=y
fi

awk '
BEGIN {
  cols = int("'"${1:-4}"'")
  rows = int(127 / cols) + 1

  oct = "'"${oct:-n}"'" == "y"
  dec = "'"${dec:-n}"'" == "y"
  hex = "'"${hex:-n}"'" == "y"

  cnt = 0 + oct + hex + dec

  # header
  for (col = 0; col < cols; col++) {
    printf("| %s%s%sChr ", (dec)?"Dec ":"", (hex)?"Hx ":"", (oct)?"Oct ":"")
  }
  printf("|\n")
  for (col = 0; col < cols; col++) {
    printf("+-%s%s%s----", (oct)?"----":"", (dec)?"----":"", (hex)?"---":"")
  }
  printf("+\n")

  # prepare special chars
  ab = "SOH,STX,ETX,EOT,ENQ,ACK,BEL,BS,TAB,LF,VT,FF,CR,SO,SI,DLE,"
  ab = ab "DC1,DC2,DC3,DC4,NAK,SYN,ETB,CAN,EM,SUB,ESC,FS,GS,RS,US,SP"
  split(ab,abr,",")
  abr[0] = "NUL"
  abr[127] = "DEL"

  # print table
  fm1 = sprintf("| %s%s%s%%-3s ", (dec)?"%03d ":"", (hex)?"%02X ":"", (oct)?"%03o ":"")
  for (row = 0; row < rows; row++) {
    for (col = 0; col < cols; col++) {
      idx = row + (col * rows)
      if (idx <= 127) {
        if (cnt == 1) {
          printf(fm1, idx, (idx in abr) ? abr[idx] : sprintf("%c",idx))
        } else if (cnt == 2) {
          printf(fm1, idx, idx, (idx in abr) ? abr[idx] : sprintf("%c",idx))
        } else {
          printf(fm1, idx, idx, idx, (idx in abr) ? abr[idx] : sprintf("%c",idx))
        }
      }
    }
    printf("|\n")
  }
}'

# vim: ft=sh ts=2 sts=2 sw=2 et:
