#!/bin/sh

# Dependencies:
#   adb
#   imagemagick (convert)

# exit if command fails.
set -e
# protect the script from unexpected cd behaviour.
unset CDPATH
# set IFS to SP HT LF.
IFS=' 	
'

usage() {
  cat << EOF
usage: $(basename "$0") [OPTION]... [FILE]

Creates a screenshot from the connected android device
and copies the file to the cwd

If FILE is not specified, a date-stamped filename will be used.

If FILE is - or stdout, the png image will be sent to stdout.

options:
  -r     rotate the screenshot depending on the screen orientation
  -h     display this help message and exit
EOF
}

while getopts "rh" opt; do
  case $opt in
    h) usage >&1 ; exit 0 ;;
    r) rotate="true" ;;
    \?) usage >&2 ; exit 2 ;;
  esac
done

shift $((OPTIND-1))

path="${1:-android_screenshot_$(date '+%Y-%m-%d_%k:%m:%S_%s').png}"
if [ "$path" = "-" ]; then
  path="stdout"
fi

if [ "$path" != "stdout" ]; then
  if [ -d "$path" ]; then
    path="${path}/android_screenshot_$(date '+%Y-%m-%d_%k:%m:%S_%s').png"
  fi
fi

if [ ! -e "$(dirname "$path")" ]; then
  printf "'%s': No such file or directory\n" "$path" >&2
  exit 1
fi

adb start-server
if ! timeout --foreground 5 adb wait-for-device; then
  printf "No device found\n" >&2
  exit 3
fi

cmd="adb shell screencap -p |sed 's/\r$//'"

if [ "$rotate" ]; then
  orientation=$(adb shell dumpsys input |grep 'SurfaceOrientation' |awk '{ print $2 }')
  cmd="${cmd} "'|convert -rotate "$(awk "BEGIN {printf '"$orientation"' * -90}")" - -'
fi

if [ "$path" = "stdout" ]; then
  eval "$cmd"
else
  eval "$cmd" > "$path"
fi

# vim: ft=sh ts=2 sts=2 sw=2 et:
